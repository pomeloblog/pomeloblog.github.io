<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>如何快速搭建个人博客</title>
    <url>/2024/07/22/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>今天，自己的博客也是正式上线了，虽然还有些简陋，不过我也会在后续慢慢美化。早在我在大二第一学期的时候就萌生了搭建自己博客的想法，由于一些原因，也是迟迟没有行动。前几天不知从哪里看到一则招聘信息，其中有一点要求有自己的技术博客，提醒了我一下。正好这几天事情比较少，可以静下来好好研究一下。</p>
<p>搭建一个自己的博客，每天分享一下自己学到的编程技巧，记录一下自己的学习轨迹，还能练习markdown书写的语法，等到投简历的时候可以在简历上多加一条:精通markdown文档的书写（bushi</p>
<p>言归正传，下面就来分享一下自己建站都要做些什么，本教程采取github pages进行部署。</p>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="编程工具"><a href="#编程工具" class="headerlink" title="编程工具"></a>编程工具</h2><h3 id="Vscode-Visual-Studio-Code"><a href="#Vscode-Visual-Studio-Code" class="headerlink" title="Vscode(Visual Studio Code)"></a>Vscode(Visual Studio Code)</h3><p>首先你要有一个ide，用于后续框架的配置修改。可以用webstorm或者vscode，这里我用的是vscode。</p>
<p>安装也十分简单，从<a href="https://code.visualstudio.com/">vscode官网</a>上就可以下载到安装包，之后正常安装就可以了。<br><img src="/source/_posts/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/vscode.png" alt="vscode官网"></p>
<p>vscode插件商店有着丰富的插件供你选择，这里我推荐一个markdown预览插件Markdown Preview Enhanced，这个插件可以让你在编写markdown文档的时候实现实时预览。</p>
<h2 id="代码托管平台"><a href="#代码托管平台" class="headerlink" title="代码托管平台"></a>代码托管平台</h2><h3 id="GIthub"><a href="#GIthub" class="headerlink" title="GIthub"></a>GIthub</h3><h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><blockquote>
<p>git 是一个分布式版本控制软件，最初由林纳斯·托瓦兹创作，于2005年以GPL许可协议发布。</p>
</blockquote>
<p>这是维基百科上给出的介绍，通俗来讲，git 是一个版本控制软件，可以记录你代码的每一次修改，并且可以回滚到之前的版本。我并不打算深入讲解怎么使用git，这里只介绍如何安装 git，以及在搭建博客的过程中会用到的一些git命令，如果对 git 感兴趣可以查看 git 的<a href="https://git-scm.com/book/zh/v2">官方文档</a>。</p>
<p>进入git的<a href="https://git-scm.com/">官网</a>，点击Download for Windows后会跳转到有多种下载方式的二级页面，选择其中一种下载方式即可。<br><img src="/source/_posts/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/git01.png" alt="git官网"><br>下载完成后，打开安装包，一路next即可。git安装默认是在C盘，若你想安装到其他盘上，修改安装路径即可，记得不要用中文路径。<br>安装完成后，在桌面右键鼠标可以发现多了两个选项，这两个选项就是git 的操作页面。一般情况下我都是使用 git 的命令行来操作 git 的，也就是第二个的 git bash。当然如果你喜欢 git 的图形化界面，你也可以使用第一个选项。<br><img src="/source/_posts/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/git02.png" alt="git"><br>点击Open Git Bash here便是git的命令行界面，使用git -v命令可以查看当前你安装的git版本。<br><img src="/source/_posts/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/git03.png" alt="git"><br>接下来要对git进行配置，这一步是必须要做的，目的是让 git 知道你的用户名和邮箱，这样在使用 git 提交代码的时候就会自动添加用户名和邮箱。<br>在刚刚打开的git bash中输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">&quot;你的用户名&quot;</span></span><br><span class="line">$ git config --global user.email 你的邮箱</span><br><span class="line">示例:</span><br><span class="line">$ git config --global user.name <span class="string">&quot;John Doe&quot;</span></span><br><span class="line">$ git config --global user.email johndoe@example.com</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意，如果使用了 <code>--global</code> 选项，那么该命令只需要运行一次，因为之后无论你在该系统上做任何事情， git 都会使用那些信息。 当你想针对特定项目使用不同的用户名称与邮件地址时，可以在那个项目目录下运行没有 <code>--global</code> 选项的命令来配置。</p>
</blockquote>
<p>如果你想通过windows自带的 cmd 或者 powershell 来使用 git，你需要配置环境变量，将 git 的 bin 目录添加到环境变量中。具体方法可参考<a href="https://blog.csdn.net/weixin_45811256/article/details/130925392">这里</a>。</p>
<h3 id="Node-js-和-npm"><a href="#Node-js-和-npm" class="headerlink" title="Node.js 和 npm"></a>Node.js 和 npm</h3><p>之所以安装 node 是因为我们搭建博客所使用的框架需要用到 node 环境<br>进入node的<a href="https://nodejs.org/zh-cn">官网</a>，点击下载（LTS是长期支持的版本），然后也是一路next<br><img src="/source/_posts/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/node01.png" alt="node"><br>安装完成后，在Windows环境下，打开 cmd，然后输入<code>node -v</code>，如果安装正常，你应该看到 node 版本号的输出。<br>npm 是什么玩意？其实 npm 是 Node.js 的包管理工具（package manager），也就是用于安装依赖的工具。<br>npm 在安装 Node.js 的时候顺带装好了，我们只需要在 cmd 中输入<code>npm -v</code>，如果安装正常，你应该看到 npm 版本号的输出。<br><img src="/source/_posts/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/node02.png" alt="node"></p>
<h2 id="安装框架"><a href="#安装框架" class="headerlink" title="安装框架"></a>安装框架</h2><h3 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h3><p>做完以上的步骤，我们就把框架所需要的工具和环境准备好了，现在需要的就是安装一个框架。框架可以把你写的 markdown 文件一键转换成静态页面，你所需要做的仅仅是 markdown 文档的编写以及 hexo 相关命令的调用，大大简化了搭建博客的过程。通过安装 hexo 的插件，甚至可以实现一键部署到github pages，十分方便。<br>我这里使用的是 <a href="https://hexo.io/zh-cn/index.html">hexo</a>，hexo 是一个快速、简洁且高效的博客框架。<br>首先在 cmd 中使用 npm 包管理器全局安装 hexo:<br><code>$ npm install -g hexo-cli</code></p>
<blockquote>
<p>注意，使用 npm 安装 hexo 的时候，你可能会遇到如下报错（如果没有可以直接跳过此处）:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">npm http GET https://registry.npmjs.org/yo</span><br><span class="line">npm ERR! network read ECONNRESET</span><br><span class="line">npm ERR! network This is most likely <span class="keyword">not</span> a problem with npm itself</span><br><span class="line">npm ERR! network and is related to network connectivity.</span><br><span class="line">npm ERR! network <span class="keyword">In</span> most cases you are behind a proxy or have bad network settings.</span><br><span class="line">npm ERR! network</span><br><span class="line">npm ERR! network <span class="keyword">If</span> you are behind a proxy, please make sure that the</span><br><span class="line">npm ERR! network &#x27;proxy&#x27; config is <span class="built_in">set</span> properly.  See: &#x27;npm <span class="built_in">help</span> config&#x27;</span><br></pre></td></tr></table></figure>
<p>不要担心，这是由于网络原因造成的报错，你可以为 npm 配置国内镜像源来解决这一问题<br>同样的，在 cmd 中输入:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">$ npm config <span class="built_in">set</span> registry https://mirrors.huaweicloud.com/repository/npm/</span><br></pre></td></tr></table></figure>
<p>然后再次在 cmd 中输入:</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">$ npm config get registry</span><br></pre></td></tr></table></figure>
<p>你将会看到控制台上输出了你刚才设置的网址<br>这个镜像是国内华为的，当然，你也可以设置其他的，具体网址网上可以搜到<br><br/><br>安装完成后，就可以进行博客项目的初始化了<br>新建一个文件夹用于存放你要写的博客，然后在该文件夹中打开 cmd，输入:<br><code>$ hexo init</code><br>这条命令会从 hexo 官方仓库中克隆一些基础项目文件到你新建的文件夹中，文件夹中会多这些文件<br><img src="/source/_posts/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/hexo01.png" alt="hexo"><br>接下来安装项目所需的相关依赖，在 cmd 中输入:<br><code> $ npm install</code><br>安装完成之后你会看到类似如下输出:<br><img src="/source/_posts/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/hexo02.png" alt="hexo"><br>这里简单介绍一下各个文件或者文件夹的作用:</p>
</blockquote>
<ul>
<li>scaffolds: 这是你博客的模板文件夹，你可以在这里编写模板文件</li>
<li>source: 这是你博客的源码文件夹<ul>
<li>_draft: 这是你博客的草稿文件夹，你可以在这里编写 markdown 草稿</li>
<li>_posts: 这是你博客的博客文件夹，你可以在这里编写 markdown 文档，这里存放的都是你要发布到博客网站上的文档</li>
</ul>
</li>
<li>public: 执行<code>hexo generate</code>后生成的编译结果文件夹，你可以在这里查看你的博客</li>
<li>themes: 这是你博客的主题文件夹，你可以把喜欢的主题放到这个文件夹中</li>
<li>_config.yml: 这是你博客的配置文件，你可以在这里配置你的博客名称、主题、标签、分类、作者、邮箱、GitHub 链接等</li>
<li>在这些文件或文件夹中除了配置要用到 _config.yml 文件外，用到最多的就是 _post 文件夹了。<br>刚刚使用<code>npm init</code>初始化后会有一个 hexo 官方提供的博客样例，我们可以通过在 cmd 中输入:<br><code>$ npm server</code><br>来开启本地服务器，你想会看到如下输出:<br><img src="/source/_posts/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/hexo03.png" alt="hexo"><br>访问控制台输出的网站即可查看样例博客<br><img src="/source/_posts/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/hexo04.png" alt="hexo"><br>使用<code>ctrl + c</code>来关闭服务器</li>
</ul>
<h1 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h1><h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1>]]></content>
  </entry>
</search>
